# Makefile.in generated by automake 1.6.3 from Makefile.am.
# adt/Makefile.  Generated from Makefile.in by configure.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.


SHELL = /bin/sh

srcdir = .
top_srcdir = ..

prefix = /usr/local
exec_prefix = ${prefix}

bindir = ${exec_prefix}/bin
sbindir = ${exec_prefix}/sbin
libexecdir = ${exec_prefix}/libexec
datadir = ${prefix}/share
sysconfdir = ${prefix}/etc
sharedstatedir = ${prefix}/com
localstatedir = ${prefix}/var
libdir = ${exec_prefix}/lib
infodir = ${prefix}/info
mandir = ${prefix}/man
includedir = ${prefix}/include
oldincludedir = /usr/include
pkgdatadir = $(datadir)/quickening
pkglibdir = $(libdir)/quickening
pkgincludedir = $(includedir)/quickening
top_builddir = ..

ACLOCAL = ${SHELL} /Users/gcross/Projects/QC/Communications/SQuInT/quicktime-frames/quickening-0.1.2/missing --run aclocal-1.6
AUTOCONF = ${SHELL} /Users/gcross/Projects/QC/Communications/SQuInT/quicktime-frames/quickening-0.1.2/missing --run autoconf
AUTOMAKE = ${SHELL} /Users/gcross/Projects/QC/Communications/SQuInT/quicktime-frames/quickening-0.1.2/missing --run automake-1.6
AUTOHEADER = ${SHELL} /Users/gcross/Projects/QC/Communications/SQuInT/quicktime-frames/quickening-0.1.2/missing --run autoheader

am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = /usr/bin/install -c
INSTALL_PROGRAM = ${INSTALL}
INSTALL_DATA = ${INSTALL} -m 644
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_SCRIPT = ${INSTALL}
INSTALL_HEADER = $(INSTALL_DATA)
transform = s,x,x,
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
host_alias = 
host_triplet = powerpc-apple-darwin8.11.0

EXEEXT = 
OBJEXT = o
PATH_SEPARATOR = :
AMTAR = ${SHELL} /Users/gcross/Projects/QC/Communications/SQuInT/quicktime-frames/quickening-0.1.2/missing --run tar
AR = ar
AS = @AS@
AWK = awk
CC = gcc
CVSCL = 
CXX = g++
CXXCPP = g++ -E
DEPDIR = .deps
DLLTOOL = @DLLTOOL@
DOT = 
ECHO = echo
EGREP = grep -E
F77 = g77
GCJ = @GCJ@
GCJFLAGS = @GCJFLAGS@
GETOPT_LIBTOOLOBJ = 
GETOPT_OBJ = 
GETOPT_SRC = 
INSTALL_STRIP_PROGRAM = ${SHELL} $(install_sh) -c -s
IPV6_ENABLED = 1
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LINT = 
LN_S = ln -s
OBJDUMP = @OBJDUMP@
PACKAGE = quickening
RANLIB = ranlib
RC = @RC@
SCANDIR_LIBTOOLOBJ = 
SCANDIR_OBJ = 
STATIC_LINK = 
STRIP = strip
VERSION = 0.1.2
WERROR = 
am__include = include
am__quote = 
install_sh = /Users/gcross/Projects/QC/Communications/SQuInT/quicktime-frames/quickening-0.1.2/install-sh
noinst_PROGRAMS = test_eventqueue test_set check_si check_typed_hash \
	check_string_bind bench-recursively check_radix check_socket_printf \
	check_base64 check_misc check_sashimi check_fmt

TESTS = check_si check_typed_hash check_string_bind check_radix check_socket_printf check_base64 check_misc check_sashimi check_fmt
EXTRA_DIST = README neils_adt.m4 tcpdump.m4 

test_eventqueue_SOURCES = test_eventqueue.c 
test_eventqueue_LDADD = libadt.la 

test_set_SOURCES = test_set.c 
test_set_LDADD = libadt.la

check_misc_SOURCES = check_misc.c
check_misc_LDADD = libadt.la
check_base64_SOURCES = check_base64.c 
check_base64_LDADD = libadt.la
check_si_SOURCES = check_si.c
check_si_LDADD = libadt.la
check_typed_hash_SOURCES = check_typed_hash.c
check_typed_hash_LDADD = libadt.la
check_string_bind_SOURCES = check_string_bind.c
check_string_bind_LDADD = libadt.la
check_radix_SOURCES = check_radix.c
check_radix_LDADD = libadt.la
check_socket_printf_SOURCES = check_socket_printf.c
check_socket_printf_LDADD = libadt.la
check_sashimi_SOURCES = check_sashimi.c 
check_sashimi_LDADD = libadt.la
check_fmt_SOURCES = check_fmt.c
check_fmt_LDADD = libadt.la

bench_recursively_SOURCES = bench-recursively.c
bench_recursively_LDADD = libadt.la

noinst_LTLIBRARIES = libadt.la libgadt.la

libadt_la_SOURCES = hashtable.c hashtable.h \
	typed_hashtable.h \
	base64.c base64.h \
	queue.c queue.h \
	typed_queue.h \
	timeseries.c timeseries.h \
	eventqueue.c eventqueue.h \
	sprinter.c sprinter.h \
	hashes.c hashes.h \
	alert.c alert.h \
	hprop.c hprop.h \
	buffer.c buffer.h \
	table.c table.h \
	hpropinterface.c hpropinterface.h \
	sorted_intlist.c sorted_intlist.h \
	sorted_stringlist.c sorted_stringlist.h \
	red_transitive.c red_transitive.h \
	link_matrix.c link_matrix.h \
	disjoint_set.c disjoint_set.h \
	string_bindings.c string_bindings.h \
	progress.c progress.h \
	postgresql.c postgresql.h \
	radix.c radix.h \
	distribution.c distribution.h \
	set.c set.h \
	join.c join.h \
	commando.c commando.h \
	recursively.c recursively.h \
	bloom.c bloom.h \
	sockaddr.c sockaddr.h \
	snprintf.c \
	socket_printf.c socket_printf.h \
	filetest.c filetest.h \
	globber.c globber.h \
	configaro.c configaro.h \
	lamefmt.c lamefmt.h \
	sashimi.c sashimi.h sashimitimer.c sashimitimer.h \
	log.c log.h \
	daemon.c daemon.h \
	nscommon.h 


# the optional getopt stuff gets used on FreeBSD, which has
# its own, non-gnu, getopt code.
libadt_la_LIBADD =  
libadt_la_DEPENDENCIES =  
EXTRA_libadt_la_SOURCES = getopt.c getopt.h getopt1.c scandir.c scandir.h

libgadt_la_SOURCES = graphing_ts.c graphing_ts.h

INCLUDES = -I$(srcdir)/.. -I$(srcdir)
subdir = adt
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)

libadt_la_LDFLAGS =
am_libadt_la_OBJECTS = hashtable.lo base64.lo queue.lo timeseries.lo \
	eventqueue.lo sprinter.lo hashes.lo alert.lo hprop.lo buffer.lo \
	table.lo hpropinterface.lo sorted_intlist.lo \
	sorted_stringlist.lo red_transitive.lo link_matrix.lo \
	disjoint_set.lo string_bindings.lo progress.lo postgresql.lo \
	radix.lo distribution.lo set.lo join.lo commando.lo \
	recursively.lo bloom.lo sockaddr.lo snprintf.lo \
	socket_printf.lo filetest.lo globber.lo configaro.lo lamefmt.lo \
	sashimi.lo sashimitimer.lo log.lo daemon.lo
libadt_la_OBJECTS = $(am_libadt_la_OBJECTS)
libgadt_la_LDFLAGS =
libgadt_la_LIBADD =
am_libgadt_la_OBJECTS = graphing_ts.lo
libgadt_la_OBJECTS = $(am_libgadt_la_OBJECTS)
noinst_PROGRAMS = test_eventqueue$(EXEEXT) test_set$(EXEEXT) \
	check_si$(EXEEXT) check_typed_hash$(EXEEXT) \
	check_string_bind$(EXEEXT) bench-recursively$(EXEEXT) \
	check_radix$(EXEEXT) check_socket_printf$(EXEEXT) \
	check_base64$(EXEEXT) check_misc$(EXEEXT) \
	check_sashimi$(EXEEXT) check_fmt$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)

am_bench_recursively_OBJECTS = bench-recursively.$(OBJEXT)
bench_recursively_OBJECTS = $(am_bench_recursively_OBJECTS)
bench_recursively_DEPENDENCIES = libadt.la
bench_recursively_LDFLAGS =
am_check_base64_OBJECTS = check_base64.$(OBJEXT)
check_base64_OBJECTS = $(am_check_base64_OBJECTS)
check_base64_DEPENDENCIES = libadt.la
check_base64_LDFLAGS =
am_check_fmt_OBJECTS = check_fmt.$(OBJEXT)
check_fmt_OBJECTS = $(am_check_fmt_OBJECTS)
check_fmt_DEPENDENCIES = libadt.la
check_fmt_LDFLAGS =
am_check_misc_OBJECTS = check_misc.$(OBJEXT)
check_misc_OBJECTS = $(am_check_misc_OBJECTS)
check_misc_DEPENDENCIES = libadt.la
check_misc_LDFLAGS =
am_check_radix_OBJECTS = check_radix.$(OBJEXT)
check_radix_OBJECTS = $(am_check_radix_OBJECTS)
check_radix_DEPENDENCIES = libadt.la
check_radix_LDFLAGS =
am_check_sashimi_OBJECTS = check_sashimi.$(OBJEXT)
check_sashimi_OBJECTS = $(am_check_sashimi_OBJECTS)
check_sashimi_DEPENDENCIES = libadt.la
check_sashimi_LDFLAGS =
am_check_si_OBJECTS = check_si.$(OBJEXT)
check_si_OBJECTS = $(am_check_si_OBJECTS)
check_si_DEPENDENCIES = libadt.la
check_si_LDFLAGS =
am_check_socket_printf_OBJECTS = check_socket_printf.$(OBJEXT)
check_socket_printf_OBJECTS = $(am_check_socket_printf_OBJECTS)
check_socket_printf_DEPENDENCIES = libadt.la
check_socket_printf_LDFLAGS =
am_check_string_bind_OBJECTS = check_string_bind.$(OBJEXT)
check_string_bind_OBJECTS = $(am_check_string_bind_OBJECTS)
check_string_bind_DEPENDENCIES = libadt.la
check_string_bind_LDFLAGS =
am_check_typed_hash_OBJECTS = check_typed_hash.$(OBJEXT)
check_typed_hash_OBJECTS = $(am_check_typed_hash_OBJECTS)
check_typed_hash_DEPENDENCIES = libadt.la
check_typed_hash_LDFLAGS =
am_test_eventqueue_OBJECTS = test_eventqueue.$(OBJEXT)
test_eventqueue_OBJECTS = $(am_test_eventqueue_OBJECTS)
test_eventqueue_DEPENDENCIES = libadt.la
test_eventqueue_LDFLAGS =
am_test_set_OBJECTS = test_set.$(OBJEXT)
test_set_OBJECTS = $(am_test_set_OBJECTS)
test_set_DEPENDENCIES = libadt.la
test_set_LDFLAGS =

DEFS = -DHAVE_CONFIG_H
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = 
LDFLAGS = 
LIBS = 
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
DEP_FILES = ./$(DEPDIR)/alert.Plo ./$(DEPDIR)/base64.Plo \
	./$(DEPDIR)/bench-recursively.Po \
	./$(DEPDIR)/bloom.Plo ./$(DEPDIR)/buffer.Plo \
	./$(DEPDIR)/check_base64.Po \
	./$(DEPDIR)/check_fmt.Po ./$(DEPDIR)/check_misc.Po \
	./$(DEPDIR)/check_radix.Po \
	./$(DEPDIR)/check_sashimi.Po \
	./$(DEPDIR)/check_si.Po \
	./$(DEPDIR)/check_socket_printf.Po \
	./$(DEPDIR)/check_string_bind.Po \
	./$(DEPDIR)/check_typed_hash.Po \
	./$(DEPDIR)/commando.Plo ./$(DEPDIR)/configaro.Plo \
	./$(DEPDIR)/daemon.Plo ./$(DEPDIR)/disjoint_set.Plo \
	./$(DEPDIR)/distribution.Plo \
	./$(DEPDIR)/eventqueue.Plo ./$(DEPDIR)/filetest.Plo \
	./$(DEPDIR)/getopt.Plo ./$(DEPDIR)/getopt1.Plo \
	./$(DEPDIR)/globber.Plo ./$(DEPDIR)/graphing_ts.Plo \
	./$(DEPDIR)/hashes.Plo ./$(DEPDIR)/hashtable.Plo \
	./$(DEPDIR)/hprop.Plo \
	./$(DEPDIR)/hpropinterface.Plo ./$(DEPDIR)/join.Plo \
	./$(DEPDIR)/lamefmt.Plo ./$(DEPDIR)/link_matrix.Plo \
	./$(DEPDIR)/log.Plo ./$(DEPDIR)/postgresql.Plo \
	./$(DEPDIR)/progress.Plo ./$(DEPDIR)/queue.Plo \
	./$(DEPDIR)/radix.Plo ./$(DEPDIR)/recursively.Plo \
	./$(DEPDIR)/red_transitive.Plo \
	./$(DEPDIR)/sashimi.Plo \
	./$(DEPDIR)/sashimitimer.Plo \
	./$(DEPDIR)/scandir.Plo ./$(DEPDIR)/set.Plo \
	./$(DEPDIR)/snprintf.Plo ./$(DEPDIR)/sockaddr.Plo \
	./$(DEPDIR)/socket_printf.Plo \
	./$(DEPDIR)/sorted_intlist.Plo \
	./$(DEPDIR)/sorted_stringlist.Plo \
	./$(DEPDIR)/sprinter.Plo \
	./$(DEPDIR)/string_bindings.Plo \
	./$(DEPDIR)/table.Plo \
	./$(DEPDIR)/test_eventqueue.Po \
	./$(DEPDIR)/test_set.Po ./$(DEPDIR)/timeseries.Plo
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) \
	$(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
CFLAGS = -g -O2 -W -Wall -Wshadow -Wpointer-arith -Wwrite-strings -Wmissing-noreturn -Wunreachable-code
DIST_SOURCES = $(libadt_la_SOURCES) $(EXTRA_libadt_la_SOURCES) \
	$(libgadt_la_SOURCES) $(bench_recursively_SOURCES) \
	$(check_base64_SOURCES) $(check_fmt_SOURCES) \
	$(check_misc_SOURCES) $(check_radix_SOURCES) \
	$(check_sashimi_SOURCES) $(check_si_SOURCES) \
	$(check_socket_printf_SOURCES) $(check_string_bind_SOURCES) \
	$(check_typed_hash_SOURCES) $(test_eventqueue_SOURCES) \
	$(test_set_SOURCES)
DIST_COMMON = README Makefile.am Makefile.in
SOURCES = $(libadt_la_SOURCES) $(EXTRA_libadt_la_SOURCES) $(libgadt_la_SOURCES) $(bench_recursively_SOURCES) $(check_base64_SOURCES) $(check_fmt_SOURCES) $(check_misc_SOURCES) $(check_radix_SOURCES) $(check_sashimi_SOURCES) $(check_si_SOURCES) $(check_socket_printf_SOURCES) $(check_string_bind_SOURCES) $(check_typed_hash_SOURCES) $(test_eventqueue_SOURCES) $(test_set_SOURCES)

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  Makefile.am  $(top_srcdir)/configure.ac $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  adt/Makefile
Makefile:  $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test -z "$dir" && dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
libadt.la: $(libadt_la_OBJECTS) $(libadt_la_DEPENDENCIES) 
	$(LINK)  $(libadt_la_LDFLAGS) $(libadt_la_OBJECTS) $(libadt_la_LIBADD) $(LIBS)
libgadt.la: $(libgadt_la_OBJECTS) $(libgadt_la_DEPENDENCIES) 
	$(LINK)  $(libgadt_la_LDFLAGS) $(libgadt_la_OBJECTS) $(libgadt_la_LIBADD) $(LIBS)

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
bench-recursively$(EXEEXT): $(bench_recursively_OBJECTS) $(bench_recursively_DEPENDENCIES) 
	@rm -f bench-recursively$(EXEEXT)
	$(LINK) $(bench_recursively_LDFLAGS) $(bench_recursively_OBJECTS) $(bench_recursively_LDADD) $(LIBS)
check_base64$(EXEEXT): $(check_base64_OBJECTS) $(check_base64_DEPENDENCIES) 
	@rm -f check_base64$(EXEEXT)
	$(LINK) $(check_base64_LDFLAGS) $(check_base64_OBJECTS) $(check_base64_LDADD) $(LIBS)
check_fmt$(EXEEXT): $(check_fmt_OBJECTS) $(check_fmt_DEPENDENCIES) 
	@rm -f check_fmt$(EXEEXT)
	$(LINK) $(check_fmt_LDFLAGS) $(check_fmt_OBJECTS) $(check_fmt_LDADD) $(LIBS)
check_misc$(EXEEXT): $(check_misc_OBJECTS) $(check_misc_DEPENDENCIES) 
	@rm -f check_misc$(EXEEXT)
	$(LINK) $(check_misc_LDFLAGS) $(check_misc_OBJECTS) $(check_misc_LDADD) $(LIBS)
check_radix$(EXEEXT): $(check_radix_OBJECTS) $(check_radix_DEPENDENCIES) 
	@rm -f check_radix$(EXEEXT)
	$(LINK) $(check_radix_LDFLAGS) $(check_radix_OBJECTS) $(check_radix_LDADD) $(LIBS)
check_sashimi$(EXEEXT): $(check_sashimi_OBJECTS) $(check_sashimi_DEPENDENCIES) 
	@rm -f check_sashimi$(EXEEXT)
	$(LINK) $(check_sashimi_LDFLAGS) $(check_sashimi_OBJECTS) $(check_sashimi_LDADD) $(LIBS)
check_si$(EXEEXT): $(check_si_OBJECTS) $(check_si_DEPENDENCIES) 
	@rm -f check_si$(EXEEXT)
	$(LINK) $(check_si_LDFLAGS) $(check_si_OBJECTS) $(check_si_LDADD) $(LIBS)
check_socket_printf$(EXEEXT): $(check_socket_printf_OBJECTS) $(check_socket_printf_DEPENDENCIES) 
	@rm -f check_socket_printf$(EXEEXT)
	$(LINK) $(check_socket_printf_LDFLAGS) $(check_socket_printf_OBJECTS) $(check_socket_printf_LDADD) $(LIBS)
check_string_bind$(EXEEXT): $(check_string_bind_OBJECTS) $(check_string_bind_DEPENDENCIES) 
	@rm -f check_string_bind$(EXEEXT)
	$(LINK) $(check_string_bind_LDFLAGS) $(check_string_bind_OBJECTS) $(check_string_bind_LDADD) $(LIBS)
check_typed_hash$(EXEEXT): $(check_typed_hash_OBJECTS) $(check_typed_hash_DEPENDENCIES) 
	@rm -f check_typed_hash$(EXEEXT)
	$(LINK) $(check_typed_hash_LDFLAGS) $(check_typed_hash_OBJECTS) $(check_typed_hash_LDADD) $(LIBS)
test_eventqueue$(EXEEXT): $(test_eventqueue_OBJECTS) $(test_eventqueue_DEPENDENCIES) 
	@rm -f test_eventqueue$(EXEEXT)
	$(LINK) $(test_eventqueue_LDFLAGS) $(test_eventqueue_OBJECTS) $(test_eventqueue_LDADD) $(LIBS)
test_set$(EXEEXT): $(test_set_OBJECTS) $(test_set_DEPENDENCIES) 
	@rm -f test_set$(EXEEXT)
	$(LINK) $(test_set_LDFLAGS) $(test_set_OBJECTS) $(test_set_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/alert.Plo
include ./$(DEPDIR)/base64.Plo
include ./$(DEPDIR)/bench-recursively.Po
include ./$(DEPDIR)/bloom.Plo
include ./$(DEPDIR)/buffer.Plo
include ./$(DEPDIR)/check_base64.Po
include ./$(DEPDIR)/check_fmt.Po
include ./$(DEPDIR)/check_misc.Po
include ./$(DEPDIR)/check_radix.Po
include ./$(DEPDIR)/check_sashimi.Po
include ./$(DEPDIR)/check_si.Po
include ./$(DEPDIR)/check_socket_printf.Po
include ./$(DEPDIR)/check_string_bind.Po
include ./$(DEPDIR)/check_typed_hash.Po
include ./$(DEPDIR)/commando.Plo
include ./$(DEPDIR)/configaro.Plo
include ./$(DEPDIR)/daemon.Plo
include ./$(DEPDIR)/disjoint_set.Plo
include ./$(DEPDIR)/distribution.Plo
include ./$(DEPDIR)/eventqueue.Plo
include ./$(DEPDIR)/filetest.Plo
include ./$(DEPDIR)/getopt.Plo
include ./$(DEPDIR)/getopt1.Plo
include ./$(DEPDIR)/globber.Plo
include ./$(DEPDIR)/graphing_ts.Plo
include ./$(DEPDIR)/hashes.Plo
include ./$(DEPDIR)/hashtable.Plo
include ./$(DEPDIR)/hprop.Plo
include ./$(DEPDIR)/hpropinterface.Plo
include ./$(DEPDIR)/join.Plo
include ./$(DEPDIR)/lamefmt.Plo
include ./$(DEPDIR)/link_matrix.Plo
include ./$(DEPDIR)/log.Plo
include ./$(DEPDIR)/postgresql.Plo
include ./$(DEPDIR)/progress.Plo
include ./$(DEPDIR)/queue.Plo
include ./$(DEPDIR)/radix.Plo
include ./$(DEPDIR)/recursively.Plo
include ./$(DEPDIR)/red_transitive.Plo
include ./$(DEPDIR)/sashimi.Plo
include ./$(DEPDIR)/sashimitimer.Plo
include ./$(DEPDIR)/scandir.Plo
include ./$(DEPDIR)/set.Plo
include ./$(DEPDIR)/snprintf.Plo
include ./$(DEPDIR)/sockaddr.Plo
include ./$(DEPDIR)/socket_printf.Plo
include ./$(DEPDIR)/sorted_intlist.Plo
include ./$(DEPDIR)/sorted_stringlist.Plo
include ./$(DEPDIR)/sprinter.Plo
include ./$(DEPDIR)/string_bindings.Plo
include ./$(DEPDIR)/table.Plo
include ./$(DEPDIR)/test_eventqueue.Po
include ./$(DEPDIR)/test_set.Po
include ./$(DEPDIR)/timeseries.Plo

distclean-depend:
	-rm -rf ./$(DEPDIR)

.c.o:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(COMPILE) -c `test -f '$<' || echo '$(srcdir)/'`$<

.c.obj:
	source='$<' object='$@' libtool=no \
	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' \
	$(CCDEPMODE) $(depcomp) \
	$(COMPILE) -c `cygpath -w $<`

.c.lo:
	source='$<' object='$@' libtool=yes \
	depfile='$(DEPDIR)/$*.Plo' tmpdepfile='$(DEPDIR)/$*.TPlo' \
	$(CCDEPMODE) $(depcomp) \
	$(LTCOMPILE) -c -o $@ `test -f '$<' || echo '$(srcdir)/'`$<
CCDEPMODE = depmode=gcc3

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ETAGS = etags
ETAGSFLAGS =

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$tags$$unique" \
	  || $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; \
	srcdir=$(srcdir); export srcdir; \
	list='$(TESTS)'; \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xpass=`expr $$xpass + 1`; \
	        failed=`expr $$failed + 1`; \
	        echo "XPASS: $$tst"; \
	      ;; \
	      *) \
	        echo "PASS: $$tst"; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *" $$tst "*) \
	        xfail=`expr $$xfail + 1`; \
	        echo "XFAIL: $$tst"; \
	      ;; \
	      *) \
	        failed=`expr $$failed + 1`; \
	        echo "FAIL: $$tst"; \
	      ;; \
	      esac; \
	    fi; \
	  done; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="All $$all tests passed"; \
	    else \
	      banner="All $$all tests behaved as expected ($$xfail expected failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all tests failed"; \
	    else \
	      banner="$$failed of $$all tests did not behave as expected ($$xpass unexpected passes)"; \
	    fi; \
	  fi; \
	  dashes=`echo "$$banner" | sed s/./=/g`; \
	  echo "$$dashes"; \
	  echo "$$banner"; \
	  echo "$$dashes"; \
	  test "$$failed" -eq 0; \
	else :; fi
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@list='$(DISTFILES)'; for file in $$list; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkinstalldirs) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS)

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

uninstall-am: uninstall-info-am

.PHONY: GTAGS all all-am check check-TESTS check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES clean-noinstPROGRAMS \
	distclean distclean-compile distclean-depend distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am info \
	info-am install install-am install-data install-data-am \
	install-exec install-exec-am install-info install-info-am \
	install-man install-strip installcheck installcheck-am \
	installdirs maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool tags uninstall uninstall-am \
	uninstall-info-am


%.lint: %.c Makefile .lclintrc %.o
	$(LINT) +unixlib -exportlocal $(AM_CFLAGS) $(DEFS) $(DEFAULT_INCLUDES) $< | tee $@

%.E: %.c
	$(CC) -E $(INCLUDES) $(DEFS) $< > $@
%.eps: %.dot
	dot -Tps $< > $@ || rm $@
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
